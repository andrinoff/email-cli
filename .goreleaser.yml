# This is the configuration file for GoReleaser.
# It defines how your project should be built, packaged, and released.
# For more information, see: https://goreleaser.com/customization/
version: 2

# The 'before' hook runs commands before the build process starts.
before:
  hooks:
    # Tidy up the go.mod file to ensure all dependencies are clean.
    - go mod tidy

# 'builds' defines the matrix of binaries to create.
builds:
  - # The main build configuration for your CLI.
    # The binary name will be 'email-cli'.
    id: "email-cli"
    # The main entrypoint of your application.
    main: .
    # The Go compiler to use.
    goos:
      - linux
      - darwin # macOS
    goarch:
      - amd64 # Intel
      - arm64 # Apple Silicon
    # Environment variables to pass to the Go compiler.
    env:
      - CGO_ENABLED=0
    # Linker flags to strip debug information and reduce binary size.
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}

# 'archives' defines how to package the built binaries.
archives:
  - # The archive configuration.
    # This will create .tar.gz files.
    format: tar.gz
    # A template for the archive file names.
    # e.g., email-cli_1.2.3_darwin_amd64.tar.gz
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    # Files to include in the archive.
    files:
      - LICENSE
      - README.md

# 'checksum' creates a file with SHA256 checksums for all artifacts.
checksum:
  name_template: "checksums.txt"

# 'snapshot' configures how test releases are named when running on non-tagged commits.
snapshot:
  name_template: "{{ .Tag }}-next"

# 'changelog' configures the automatic generation of release notes.
changelog:
  sort: asc
  filters:
    # Exclude commit messages that match these patterns from the changelog.
    exclude:
      - "^docs:"
      - "^test:"
      - "Merge branch"

# 'release' configures the GitHub Release creation.
release:
  # If set to true, GoReleaser will automatically draft a new release.
  # Set to false to automatically publish the release.
  draft: false
  # If set to true, will mark the release as a pre-release.
  prerelease: auto

brews:
  - name: email-cli
    homepage: "https://github.com/andrinoff/email-cli"
    description: "A beautiful and functional email client for your terminal."
    tap:
      owner: andrinoff
      name: homebrew-email-cli
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    install: |
      bin.install "email-cli"
    test: |
      system "#{bin}/email-cli --version"
